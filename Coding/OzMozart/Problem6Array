chall\sol(code): #0 codeabbey, 6 (3.08)
chall\sol(code): #0 codeabbey, 52 (5.26)
chall\sol(code): #0 codeabbey, 171 (7.40)
chall\sol(vbd): #0 vulnhub, 0089-symfonos-5-2
chall\sol(vbd): #0 vulnhub, 0077-funbox-scriptkiddie
chall\sol(vbd): #0 vulnhub, 0079-funbox-under-construction
chall\sol(code): #0 codeabbey, 143 (9.50)
chall\sol(vbd): #0 vulnhub, 0434-tech-support-1
chall\sol(code): #0 codeabbey, 179 (11.69)
chall\sol(vbd): #0 vulnhub, 0307-funbox-gaokao
chall\sol(code): #0 codeabbey, 41 (3.82)
chall\sol(code): #0 codeabbey, 22 (6.07)

functor
import
    System
    Application
    Opens
define
local
  Data = {New class $ from Open.file Open.text end init(name:stdin)}
  Ncases = {String.toInt {Data getS($)}}
  ArrayEnd

  fun {RoundNumber Row}
    local
      List = {String.tokens {Row getS($)} & }
      CleanData = {Map List String.toFloat}
    in
      {FloatToInt {Nth CleanData 1} / {Nth CleanData 2}}
    end
  end
    
 
  fun {Print Ncases Data}
    local 
      Resolve = {RoundNumber Data}
    in
      if Ncases > 1
      then 
        Resolve | {Print Ncases-1 Data}
      else 
        Resolve | nil
      end
    end
  end
  
in
  ArrayEnd = {Print Ncases Data}
  {System.show ArrayEnd}
  {Application.exit 0}
end
end
